// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: ExpressionStatement"]
	2 [label="[2]: ExpressionStatement"]
	3 [label="[3]: VariableDeclaration"]
	4 [label="[4]: IfStatement"]
	5 [label="[5]: CallExpression"]
	6 [label="[6]: MemberExpression"]
	7 [label="[7]: Identifier"]
	8 [label="[8]: LiteralBoolean"]
	9 [label="[9]: ExpressionStatement"]
	10 [label="[10]: CallExpression"]
	11 [label="[11]: LiteralString"]
	12 [label="[12]: AssignmentExpression"]
	13 [label="[13]: CallExpression"]
	14 [label="[14]: MemberExpression"]
	15 [label="[15]: Identifier"]
	16 [label="[16]: LiteralRegExp"]
	17 [label="[17]: FunctionExpression"]
	18 [label="[18]: ArrayAccess"]
	20 [label="[20]: ThisExpression"]
	21 [label="[21]: CallExpression"]
	23 [label="[23]: LiteralString"]
	24 [label="[24]: LiteralRegExp"]
	25 [label="[25]: FunctionExpression"]
	26 [label="[26]: AssignmentExpression"]
	27 [label="[27]: ThisExpression"]
	29 [label="[29]: IfStatement"]
	30 [label="[30]: ReturnStatement"]
	31 [label="[31]: EmptyStatement"]
	32 [label="[32]: SwitchStatement"]
	33 [label="[33]: CallExpression"]
	34 [label="[34]: Property"]
	35 [label="[35]: LiteralString"]
	36 [label="[36]: AssignmentExpression"]
	38 [label="[38]: LiteralBoolean"]
	39 [label="[39]: CallExpression"]
	40 [label="[40]: MemberExpression"]
	41 [label="[41]: Identifier"]
	42 [label="[42]: LiteralString"]
	43 [label="[43]: UpdateExpression"]
	44 [label="[44]: LiteralBoolean"]
	45 [label="[45]: ThisExpression"]
	47 [label="[47]: Identifier"]
	48 [label="[48]: LiteralString"]
	49 [label="[49]: LiteralRegExp"]
	50 [label="[50]: FunctionExpression"]
	51 [label="[51]: ArrayAccess"]
	52 [label="[52]: ThisExpression"]
	53 [label="[53]: Identifier"]
	54 [label="[54]: LiteralString"]
	0 -- 1
	0 -- 2
}
