// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: ExpressionStatement"]
	2 [label="[2]: ExpressionStatement"]
	3 [label="[3]: VariableDeclaration"]
	4 [label="[4]: CallExpression"]
	5 [label="[5]: MemberExpression"]
	6 [label="[6]: VariableDeclarator"]
	7 [label="[7]: LiteralBoolean"]
	8 [label="[8]: CallExpression"]
	9 [label="[9]: Identifier"]
	10 [label="[10]: LiteralString"]
	11 [label="[11]: VariableDeclarator"]
	12 [label="[12]: AssignmentExpression"]
	13 [label="[13]: ThisExpression"]
	14 [label="[14]: CallExpression"]
	15 [label="[15]: Identifier"]
	16 [label="[16]: LiteralString"]
	17 [label="[17]: ArrayExpression"]
	18 [label="[18]: FunctionExpression"]
	19 [label="[19]: ArrayAccess"]
	20 [label="[20]: ThisExpression"]
	21 [label="[21]: Identifier"]
	22 [label="[22]: LiteralString"]
	23 [label="[23]: FunctionExpression"]
	24 [label="[24]: ArrayAccess"]
	25 [label="[25]: UpdateExpression"]
	26 [label="[26]: LiteralBoolean"]
	27 [label="[27]: ThisExpression"]
	28 [label="[28]: CallExpression"]
	29 [label="[29]: Identifier"]
	30 [label="[30]: LiteralString"]
	31 [label="[31]: FunctionExpression"]
	32 [label="[32]: AssignmentExpression"]
	33 [label="[33]: CallExpression"]
	34 [label="[34]: Identifier"]
	35 [label="[35]: LiteralString"]
	36 [label="[36]: BinaryExpression"]
	37 [label="[37]: FunctionExpression"]
	38 [label="[38]: SequenceExpression"]
	39 [label="[39]: Identifier"]
	40 [label="[40]: ArrayAccess"]
	41 [label="[41]: NewExpression"]
	42 [label="[42]: LiteralBoolean"]
	43 [label="[43]: SequenceExpression"]
	44 [label="[44]: Identifier"]
	45 [label="[45]: LiteralString"]
	46 [label="[46]: BinaryExpression"]
	47 [label="[47]: FunctionExpression"]
	48 [label="[48]: LiteralBoolean"]
	49 [label="[49]: ThisExpression"]
	50 [label="[50]: CallExpression"]
	51 [label="[51]: Identifier"]
	52 [label="[52]: LiteralRegExp"]
	53 [label="[53]: AssignmentExpression"]
	54 [label="[54]: NewExpression"]
	0 -- 1
	0 -- 2
}
