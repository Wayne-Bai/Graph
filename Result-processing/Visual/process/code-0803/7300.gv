// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: ExpressionStatement"]
	2 [label="[2]: CallExpression"]
	3 [label="[3]: LiteralBoolean"]
	4 [label="[4]: MemberExpression"]
	5 [label="[5]: LiteralString"]
	6 [label="[6]: LiteralBoolean"]
	7 [label="[7]: CallExpression"]
	8 [label="[8]: LiteralString"]
	9 [label="[9]: FunctionExpression"]
	10 [label="[10]: LiteralBoolean"]
	11 [label="[11]: CallExpression"]
	12 [label="[12]: MemberExpression"]
	13 [label="[13]: LiteralString"]
	14 [label="[14]: LiteralBoolean"]
	15 [label="[15]: ThisExpression"]
	16 [label="[16]: CallExpression"]
	17 [label="[17]: LiteralString"]
	18 [label="[18]: ObjectExpression"]
	19 [label="[19]: FunctionExpression"]
	20 [label="[20]: LiteralBoolean"]
	21 [label="[21]: ThisExpression"]
	22 [label="[22]: CallExpression"]
	23 [label="[23]: MemberExpression"]
	24 [label="[24]: Identifier"]
	25 [label="[25]: LiteralRegExp"]
	26 [label="[26]: FunctionExpression"]
	27 [label="[27]: AssignmentExpression"]
	28 [label="[28]: ThisExpression"]
	29 [label="[29]: CallExpression"]
	30 [label="[30]: Property"]
	31 [label="[31]: LiteralString"]
	32 [label="[32]: BinaryExpression"]
	33 [label="[33]: ArrayAccess"]
	34 [label="[34]: CallExpression"]
	35 [label="[35]: Identifier"]
	36 [label="[36]: ObjectExpression"]
	37 [label="[37]: AssignmentExpression"]
	38 [label="[38]: LiteralBoolean"]
	39 [label="[39]: ThisExpression"]
	40 [label="[40]: CallExpression"]
	41 [label="[41]: Identifier"]
	42 [label="[42]: AssignmentExpression"]
	43 [label="[43]: LiteralBoolean"]
	44 [label="[44]: ThisExpression"]
	45 [label="[45]: CallExpression"]
	46 [label="[46]: Identifier"]
	47 [label="[47]: LiteralString"]
	48 [label="[48]: LiteralBoolean"]
	49 [label="[49]: ThisExpression"]
	50 [label="[50]: CallExpression"]
	51 [label="[51]: MemberExpression"]
	52 [label="[52]: Identifier"]
	53 [label="[53]: LiteralBoolean"]
	54 [label="[54]: CallExpression"]
	0 -- 1
	1 -- 2
}
