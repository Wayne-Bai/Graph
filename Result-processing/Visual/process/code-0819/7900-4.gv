// Result
graph {
	0 [label="[0]: Program
[NoValue]"]
	1 [label="[1]: ReturnStatement
[NoValue]"]
	2 [label="[2]: ReturnStatement
[NoValue]"]
	3 [label="[3]: EmptyStatement
[NoValue]"]
	4 [label="[4]: ForInStatement
[Function]"]
	5 [label="[5]: LiteralNull
[Function]"]
	6 [label="[6]: LiteralBoolean
[Function]"]
	7 [label="[7]: ConditionalExpression
[NoValue]"]
	8 [label="[8]: ExpressionStatement
[NoValue]"]
	9 [label="[9]: CallExpression
[NoValue]"]
	10 [label="[10]: BinaryExpression
[Function]"]
	11 [label="[11]: ExpressionStatement
[NoValue]"]
	12 [label="[12]: SequenceExpression
[NoValue]"]
	13 [label="[13]: CallExpression
[NoValue]"]
	14 [label="[14]: LiteralNull
[/ /g]"]
	15 [label="[15]: MemberExpression
[NoValue]"]
	16 [label="[16]: LiteralString
[v5]"]
	17 [label="[17]: Identifier
[Error]"]
	18 [label="[18]: LiteralString
[v5]"]
	19 [label="[19]: MemberExpression
[NoValue]"]
	20 [label="[20]: LiteralNull
[/ /g]"]
	21 [label="[21]: BinaryExpression
[Function]"]
	22 [label="[22]: ConditionalExpression
[NoValue]"]
	23 [label="[23]: MemberExpression
[NoValue]"]
	24 [label="[24]: Identifier
[Error]"]
	25 [label="[25]: Property
[/ /g]"]
	26 [label="[26]: Identifier
[Error]"]
	27 [label="[27]: Property
[/ /g]"]
	28 [label="[28]: CallExpression
[NoValue]"]
	29 [label="[29]: LiteralNull
[Function]"]
	30 [label="[30]: ConditionalExpression
[NoValue]"]
	31 [label="[31]: ConditionalExpression
[NoValue]"]
	32 [label="[32]: Property
[/ /g]"]
	33 [label="[33]: MemberExpression
[NoValue]"]
	34 [label="[34]: LiteralString
[v5]"]
	35 [label="[35]: ObjectExpression
[null]"]
	36 [label="[36]: CallExpression
[NoValue]"]
	37 [label="[37]: Identifier
[Error]"]
	38 [label="[38]: ConditionalExpression
[/ /g]"]
	39 [label="[39]: MemberExpression
[NoValue]"]
	40 [label="[40]: Property
[/ /g]"]
	41 [label="[41]: MemberExpression
[NoValue]"]
	42 [label="[42]: ConditionalExpression
[NoValue]"]
	43 [label="[43]: Identifier
[Error]"]
	44 [label="[44]: Property
[/ /g]"]
	45 [label="[45]: Identifier
[Error]"]
	46 [label="[46]: Property
[/ /g]"]
	47 [label="[47]: Identifier
[Error]"]
	48 [label="[48]: ConditionalExpression
[/ /g]"]
	49 [label="[49]: LiteralNull
[Function]"]
	50 [label="[50]: LiteralNull
[Function]"]
	51 [label="[51]: LiteralNull
[Function]"]
	52 [label="[52]: LiteralNull
[Function]"]
	53 [label="[53]: LiteralNull
[Function]"]
	54 [label="[54]: LiteralNull
[Function]"]
	0 -- 1
	0 -- 2
	0 -- 3
	0 -- 4
	2 -- 5
	2 -- 6
	2 -- 7
	4 -- 8
	4 -- 9
	4 -- 10
	4 -- 11
	4 -- 12
	8 -- 14
	8 -- 15
	9 -- 13
	9 -- 16
	10 -- 17
	10 -- 18
	11 -- 20
	11 -- 22
	12 -- 19
	12 -- 21
	13 -- 23
	13 -- 24
	15 -- 25
	15 -- 26
	19 -- 27
	21 -- 28
	21 -- 29
	22 -- 30
	23 -- 31
	23 -- 32
	25 -- 33
	28 -- 34
	28 -- 35
	30 -- 36
	30 -- 37
	31 -- 38
	33 -- 39
	33 -- 40
	33 -- 41
	36 -- 42
	36 -- 43
	39 -- 44
	39 -- 45
	39 -- 51
	41 -- 46
	42 -- 47
	42 -- 48
	42 -- 53
	48 -- 50
	48 -- 52
	48 -- 54
}
