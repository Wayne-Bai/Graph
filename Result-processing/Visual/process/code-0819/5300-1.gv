// Result
graph {
	0 [label="[0]: Program
[NoValue]"]
	1 [label="[1]: ExpressionStatement
[NoValue]"]
	2 [label="[2]: ConditionalExpression
[NoValue]"]
	3 [label="[3]: ReturnStatement
[NoValue]"]
	4 [label="[4]: BlockStatement
[NoValue]"]
	5 [label="[5]: LiteralNull
[Function]"]
	6 [label="[6]: Identifier
[Error]"]
	7 [label="[7]: Identifier
[Error]"]
	8 [label="[8]: Identifier
[Error]"]
	9 [label="[9]: ConditionalExpression
[NoValue]"]
	10 [label="[10]: ExpressionStatement
[NoValue]"]
	11 [label="[11]: ForStatement
[Error]"]
	12 [label="[12]: ReturnStatement
[NoValue]"]
	13 [label="[13]: EmptyStatement
[NoValue]"]
	14 [label="[14]: ConditionalExpression
[NoValue]"]
	15 [label="[15]: ConditionalExpression
[NoValue]"]
	16 [label="[16]: Identifier
[Error]"]
	17 [label="[17]: LiteralNull
[/ /g]"]
	18 [label="[18]: Identifier
[Error]"]
	19 [label="[19]: LiteralString
[v5]"]
	20 [label="[20]: ConditionalExpression
[Function]"]
	21 [label="[21]: ConditionalExpression
[NoValue]"]
	22 [label="[22]: LiteralNull
[Function]"]
	23 [label="[23]: ObjectExpression
[NoValue]"]
	24 [label="[24]: ConditionalExpression
[NoValue]"]
	25 [label="[25]: ConditionalExpression
[NoValue]"]
	26 [label="[26]: Identifier
[Error]"]
	27 [label="[27]: CallExpression
[NoValue]"]
	28 [label="[28]: LiteralBoolean
[Function]"]
	29 [label="[29]: ConditionalExpression
[NoValue]"]
	30 [label="[30]: ConditionalExpression
[NoValue]"]
	31 [label="[31]: Identifier
[Error]"]
	32 [label="[32]: ConditionalExpression
[NoValue]"]
	33 [label="[33]: MemberExpression
[NoValue]"]
	34 [label="[34]: LiteralString
[v5]"]
	35 [label="[35]: CallExpression
[NoValue]"]
	36 [label="[36]: ObjectExpression
[NoValue]"]
	37 [label="[37]: ConditionalExpression
[NoValue]"]
	38 [label="[38]: Identifier
[Error]"]
	39 [label="[39]: Property
[/ /g]"]
	40 [label="[40]: Identifier
[Error]"]
	41 [label="[41]: Identifier
[Error]"]
	42 [label="[42]: Property
[Function]"]
	43 [label="[43]: CallExpression
[NoValue]"]
	44 [label="[44]: ConditionalExpression
[NoValue]"]
	45 [label="[45]: ConditionalExpression
[NoValue]"]
	46 [label="[46]: Identifier
[Error]"]
	47 [label="[47]: Identifier
[Error]"]
	48 [label="[48]: ConditionalExpression
[/ /g]"]
	49 [label="[49]: Identifier
[Error]"]
	50 [label="[50]: ConditionalExpression
[/ /g]"]
	51 [label="[51]: LiteralNull
[Function]"]
	52 [label="[52]: LiteralNull
[Function]"]
	53 [label="[53]: LiteralNull
[Function]"]
	54 [label="[54]: LiteralNull
[Function]"]
	0 -- 1
	0 -- 3
	0 -- 4
	1 -- 2
	2 -- 5
	3 -- 6
	3 -- 7
	3 -- 8
	3 -- 9
	4 -- 10
	4 -- 11
	4 -- 12
	4 -- 13
	9 -- 15
	10 -- 14
	10 -- 17
	11 -- 16
	12 -- 18
	12 -- 19
	12 -- 20
	14 -- 21
	14 -- 23
	15 -- 22
	15 -- 24
	15 -- 25
	15 -- 26
	20 -- 27
	21 -- 28
	24 -- 29
	24 -- 30
	25 -- 31
	25 -- 32
	27 -- 33
	27 -- 34
	27 -- 35
	30 -- 36
	32 -- 37
	32 -- 38
	33 -- 39
	35 -- 40
	35 -- 41
	35 -- 43
	36 -- 42
	37 -- 44
	39 -- 53
	43 -- 45
	43 -- 46
	43 -- 47
	44 -- 48
	45 -- 49
	45 -- 50
	50 -- 52
	50 -- 54
}
