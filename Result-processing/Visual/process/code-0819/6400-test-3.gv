// Result
graph {
	0 [label="[0]: Program
[NoValue]"]
	1 [label="[1]: IfStatement
[NoValue]"]
	2 [label="[2]: IfStatement
[NoValue]"]
	3 [label="[3]: IfStatement
[NoValue]"]
	4 [label="[4]: IfStatement
[NoValue]"]
	5 [label="[5]: BinaryExpression
[!==]"]
	6 [label="[6]: BlockStatement
[NoValue]"]
	7 [label="[7]: BinaryExpression
[!==]"]
	8 [label="[8]: BlockStatement
[NoValue]"]
	9 [label="[9]: BinaryExpression
[!==]"]
	10 [label="[10]: BlockStatement
[NoValue]"]
	11 [label="[11]: BinaryExpression
[!==]"]
	12 [label="[12]: BlockStatement
[NoValue]"]
	13 [label="[13]: BinaryExpression
[!=]"]
	14 [label="[14]: LiteralBoolean
[false]"]
	15 [label="[15]: ExpressionStatement
[NoValue]"]
	16 [label="[16]: BinaryExpression
[!=]"]
	17 [label="[17]: LiteralBoolean
[false]"]
	18 [label="[18]: ExpressionStatement
[NoValue]"]
	19 [label="[19]: BinaryExpression
[!=]"]
	20 [label="[20]: LiteralBoolean
[false]"]
	21 [label="[21]: ExpressionStatement
[NoValue]"]
	22 [label="[22]: BinaryExpression
[!=]"]
	23 [label="[23]: LiteralBoolean
[false]"]
	24 [label="[24]: ExpressionStatement
[NoValue]"]
	25 [label="[25]: LiteralBoolean
[false]"]
	26 [label="[26]: LiteralString
[s1]"]
	27 [label="[27]: CallExpression
[NoValue]"]
	28 [label="[28]: LiteralBoolean
[true]"]
	29 [label="[29]: NewExpression
[NoValue]"]
	30 [label="[30]: CallExpression
[NoValue]"]
	31 [label="[31]: LiteralBoolean
[true]"]
	32 [label="[32]: ObjectExpression
[NoValue]"]
	33 [label="[33]: CallExpression
[NoValue]"]
	34 [label="[34]: LiteralBoolean
[true]"]
	35 [label="[35]: LiteralNumber
[1]"]
	36 [label="[36]: CallExpression
[NoValue]"]
	37 [label="[37]: Identifier
[v0]"]
	38 [label="[38]: LiteralString
[s2]"]
	39 [label="[39]: Identifier
[Boolean]"]
	40 [label="[40]: LiteralBoolean
[true]"]
	41 [label="[41]: Identifier
[v0]"]
	42 [label="[42]: LiteralString
[s3]"]
	43 [label="[43]: Property
[valueOf]"]
	44 [label="[44]: Identifier
[v0]"]
	45 [label="[45]: LiteralString
[s4]"]
	46 [label="[46]: Identifier
[v0]"]
	47 [label="[47]: LiteralString
[s0]"]
	48 [label="[48]: FunctionExpression
[NoValue]"]
	49 [label="[49]: BlockStatement
[NoValue]"]
	50 [label="[50]: ReturnStatement
[NoValue]"]
	51 [label="[51]: LiteralNumber
[1]"]
	0 -- 1
	0 -- 2
	0 -- 3
	0 -- 4
	1 -- 5
	1 -- 6
	2 -- 7
	2 -- 8
	3 -- 9
	3 -- 10
	4 -- 11
	4 -- 12
	5 -- 13
	5 -- 14
	6 -- 15
	7 -- 16
	7 -- 17
	8 -- 18
	9 -- 19
	9 -- 20
	10 -- 21
	11 -- 22
	11 -- 23
	12 -- 24
	13 -- 25
	13 -- 26
	15 -- 27
	16 -- 28
	16 -- 29
	18 -- 30
	19 -- 31
	19 -- 32
	21 -- 33
	22 -- 34
	22 -- 35
	24 -- 36
	27 -- 37
	27 -- 38
	29 -- 39
	29 -- 40
	30 -- 41
	30 -- 42
	32 -- 43
	33 -- 44
	33 -- 45
	36 -- 46
	36 -- 47
	43 -- 48
	48 -- 49
	49 -- 50
	50 -- 51
}
