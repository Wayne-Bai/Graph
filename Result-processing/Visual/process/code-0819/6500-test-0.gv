// Result
graph {
	0 [label="[0]: Program
[NoValue]"]
	1 [label="[1]: VariableDeclaration
[NoValue]"]
	2 [label="[2]: VariableDeclaration
[NoValue]"]
	3 [label="[3]: VariableDeclaration
[NoValue]"]
	4 [label="[4]: FunctionDeclaration
[NoValue]"]
	5 [label="[5]: ExpressionStatement
[NoValue]"]
	6 [label="[6]: VariableDeclarator
[v0]"]
	7 [label="[7]: VariableDeclarator
[v1]"]
	8 [label="[8]: VariableDeclarator
[v2]"]
	9 [label="[9]: Identifier
[f0]"]
	10 [label="[10]: Identifier
[v3]"]
	11 [label="[11]: BlockStatement
[NoValue]"]
	12 [label="[12]: AssignmentExpression
[NoValue]"]
	13 [label="[13]: MemberExpression
[NoValue]"]
	14 [label="[14]: MemberExpression
[NoValue]"]
	15 [label="[15]: CallExpression
[NoValue]"]
	16 [label="[16]: ReturnStatement
[NoValue]"]
	17 [label="[17]: MemberExpression
[NoValue]"]
	18 [label="[18]: Identifier
[f0]"]
	19 [label="[19]: Identifier
[Object]"]
	20 [label="[20]: Property
[prototype]"]
	21 [label="[21]: Identifier
[v0]"]
	22 [label="[22]: Property
[v1]"]
	23 [label="[23]: Identifier
[RegExp]"]
	24 [label="[24]: BinaryExpression
[+]"]
	25 [label="[25]: LogicalExpression
[&&]"]
	26 [label="[26]: Identifier
[v4]"]
	27 [label="[27]: Property
[exports]"]
	28 [label="[28]: BinaryExpression
[+]"]
	29 [label="[29]: LiteralString
[s3]"]
	30 [label="[30]: BinaryExpression
[==]"]
	31 [label="[31]: CallExpression
[NoValue]"]
	32 [label="[32]: LiteralString
[s0]"]
	33 [label="[33]: CallExpression
[NoValue]"]
	34 [label="[34]: UnaryExpression
[typeof]"]
	35 [label="[35]: LiteralString
[s4]"]
	36 [label="[36]: MemberExpression
[NoValue]"]
	37 [label="[37]: Identifier
[v3]"]
	38 [label="[38]: MemberExpression
[NoValue]"]
	39 [label="[39]: LiteralRegExp
[/toString| for [^\]]+/g]"]
	40 [label="[40]: LiteralString
[s2]"]
	41 [label="[41]: Identifier
[v3]"]
	42 [label="[42]: Identifier
[v2]"]
	43 [label="[43]: Property
[test]"]
	44 [label="[44]: CallExpression
[NoValue]"]
	45 [label="[45]: Property
[replace]"]
	46 [label="[46]: MemberExpression
[NoValue]"]
	47 [label="[47]: LiteralRegExp
[/[.*+?^${}()|[\]\\]/g]"]
	48 [label="[48]: LiteralString
[s1]"]
	49 [label="[49]: CallExpression
[NoValue]"]
	50 [label="[50]: Property
[replace]"]
	51 [label="[51]: Identifier
[String]"]
	52 [label="[52]: Identifier
[v1]"]
	0 -- 1
	0 -- 2
	0 -- 3
	0 -- 4
	0 -- 5
	1 -- 6
	2 -- 7
	3 -- 8
	4 -- 9
	4 -- 10
	4 -- 11
	5 -- 12
	6 -- 13
	7 -- 14
	8 -- 15
	11 -- 16
	12 -- 17
	12 -- 18
	13 -- 19
	13 -- 20
	14 -- 21
	14 -- 22
	15 -- 23
	15 -- 24
	16 -- 25
	17 -- 26
	17 -- 27
	24 -- 28
	24 -- 29
	25 -- 30
	25 -- 31
	28 -- 32
	28 -- 33
	30 -- 34
	30 -- 35
	31 -- 36
	31 -- 37
	33 -- 38
	33 -- 39
	33 -- 40
	34 -- 41
	36 -- 42
	36 -- 43
	38 -- 44
	38 -- 45
	44 -- 46
	44 -- 47
	44 -- 48
	46 -- 49
	46 -- 50
	49 -- 51
	49 -- 52
}
