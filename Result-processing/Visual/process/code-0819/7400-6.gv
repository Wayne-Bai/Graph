// Result
graph {
	0 [label="[0]: Program
[NoValue]"]
	1 [label="[1]: ExpressionStatement
[NoValue]"]
	2 [label="[2]: ConditionalExpression
[NoValue]"]
	3 [label="[3]: ConditionalExpression
[NoValue]"]
	4 [label="[4]: ReturnStatement
[NoValue]"]
	5 [label="[5]: ExpressionStatement
[NoValue]"]
	6 [label="[6]: TryStatement
[Function]"]
	7 [label="[7]: Identifier
[Error]"]
	8 [label="[8]: LiteralNull
[Function]"]
	9 [label="[9]: LiteralNull
[Function]"]
	10 [label="[10]: LiteralNull
[Function]"]
	11 [label="[11]: LiteralNull
[Function]"]
	12 [label="[12]: LiteralNull
[Function]"]
	13 [label="[13]: CallExpression
[NoValue]"]
	14 [label="[14]: EmptyStatement
[Function]"]
	15 [label="[15]: EmptyStatement
[Error]"]
	16 [label="[16]: CatchClause
[NoValue]"]
	17 [label="[17]: CatchClause
[NoValue]"]
	18 [label="[18]: CatchClause
[NoValue]"]
	19 [label="[19]: CatchClause
[NoValue]"]
	20 [label="[20]: CatchClause
[NoValue]"]
	21 [label="[21]: MemberExpression
[NoValue]"]
	22 [label="[22]: Identifier
[Error]"]
	23 [label="[23]: Identifier
[Error]"]
	24 [label="[24]: Identifier
[Error]"]
	25 [label="[25]: BlockStatement
[v5]"]
	26 [label="[26]: Identifier
[Error]"]
	27 [label="[27]: BlockStatement
[v5]"]
	28 [label="[28]: BlockStatement
[NoValue]"]
	29 [label="[29]: Identifier
[Error]"]
	30 [label="[30]: BlockStatement
[v5]"]
	31 [label="[31]: BlockStatement
[NoValue]"]
	32 [label="[32]: Identifier
[Error]"]
	33 [label="[33]: BlockStatement
[v5]"]
	34 [label="[34]: BlockStatement
[NoValue]"]
	35 [label="[35]: Identifier
[Error]"]
	36 [label="[36]: LiteralString
[v5]"]
	37 [label="[37]: LiteralString
[v5]"]
	38 [label="[38]: BlockStatement
[v5]"]
	39 [label="[39]: Identifier
[Error]"]
	40 [label="[40]: Property
[/ /g]"]
	41 [label="[41]: Identifier
[Error]"]
	42 [label="[42]: IfStatement
[/ /g]"]
	43 [label="[43]: Identifier
[Error]"]
	44 [label="[44]: IfStatement
[/ /g]"]
	45 [label="[45]: ForStatement
[Error]"]
	46 [label="[46]: IfStatement
[/ /g]"]
	47 [label="[47]: LiteralBoolean
[Function]"]
	48 [label="[48]: ConditionalExpression
[Function]"]
	49 [label="[49]: BinaryExpression
[Function]"]
	50 [label="[50]: BinaryExpression
[Function]"]
	51 [label="[51]: BinaryExpression
[Function]"]
	52 [label="[52]: BinaryExpression
[Function]"]
	53 [label="[53]: BinaryExpression
[Function]"]
	54 [label="[54]: BinaryExpression
[Function]"]
	0 -- 1
	0 -- 4
	0 -- 5
	0 -- 6
	1 -- 2
	1 -- 3
	1 -- 7
	3 -- 8
	4 -- 9
	4 -- 10
	5 -- 11
	5 -- 12
	5 -- 13
	6 -- 14
	6 -- 15
	6 -- 16
	6 -- 17
	6 -- 18
	6 -- 19
	6 -- 20
	13 -- 21
	13 -- 22
	13 -- 23
	13 -- 24
	16 -- 25
	17 -- 26
	17 -- 27
	17 -- 28
	18 -- 29
	19 -- 30
	19 -- 31
	19 -- 32
	19 -- 34
	20 -- 33
	20 -- 38
	21 -- 35
	21 -- 36
	21 -- 37
	21 -- 39
	21 -- 40
	21 -- 41
	21 -- 43
	28 -- 42
	31 -- 44
	33 -- 45
	34 -- 46
	44 -- 51
	45 -- 48
	45 -- 53
	46 -- 49
	49 -- 50
}
