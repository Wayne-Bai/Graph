// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: FunctionDeclaration"]
	2 [label="[2]: EmptyStatement"]
	3 [label="[3]: IfStatement"]
	4 [label="[4]: Identifier"]
	5 [label="[5]: BlockStatement"]
	6 [label="[6]: BinaryExpression"]
	7 [label="[7]: BlockStatement"]
	8 [label="[8]: VariableDeclaration"]
	9 [label="[9]: ForStatement"]
	10 [label="[10]: EmptyStatement"]
	11 [label="[11]: ReturnStatement"]
	12 [label="[12]: CallExpression"]
	13 [label="[13]: TryStatement"]
	14 [label="[14]: VariableDeclarator"]
	15 [label="[15]: ExpressionStatement"]
	16 [label="[16]: VariableDeclaration"]
	17 [label="[17]: BinaryExpression"]
	18 [label="[18]: UpdateExpression"]
	19 [label="[19]: BlockStatement"]
	20 [label="[20]: Identifier"]
	21 [label="[21]: Identifier"]
	22 [label="[22]: LiteralString"]
	23 [label="[23]: CatchClause"]
	24 [label="[24]: CatchClause"]
	25 [label="[25]: CatchClause"]
	26 [label="[26]: CatchClause"]
	27 [label="[27]: LiteralString"]
	28 [label="[28]: BlockStatement"]
	29 [label="[29]: LiteralString"]
	30 [label="[30]: LiteralString"]
	33 [label="[33]: Identifier"]
	34 [label="[34]: ExpressionStatement"]
	35 [label="[35]: Identifier"]
	36 [label="[36]: VariableDeclaration"]
	37 [label="[37]: TryStatement"]
	38 [label="[38]: BlockStatement"]
	39 [label="[39]: ReturnStatement"]
	40 [label="[40]: AssignmentExpression"]
	41 [label="[41]: VariableDeclarator"]
	42 [label="[42]: SwitchStatement"]
	43 [label="[43]: SwitchStatement"]
	44 [label="[44]: ArrayAccess"]
	45 [label="[45]: Identifier"]
	46 [label="[46]: LiteralString"]
	47 [label="[47]: LiteralString"]
	48 [label="[48]: LiteralString"]
	51 [label="[51]: LiteralString"]
	0 -- 1
	0 -- 2
	0 -- 3
	1 -- 4
	1 -- 5
	1 -- 6
	1 -- 7
	3 -- 8
	3 -- 9
	5 -- 11
	6 -- 12
	7 -- 13
	7 -- 15
	8 -- 14
	9 -- 16
	9 -- 17
	9 -- 18
	9 -- 20
	12 -- 21
	12 -- 22
	12 -- 27
	13 -- 19
	13 -- 23
	13 -- 24
	13 -- 25
	13 -- 26
	13 -- 28
	14 -- 29
	15 -- 30
	18 -- 33
	19 -- 34
	24 -- 35
	28 -- 36
	28 -- 37
	36 -- 41
	38 -- 42
	38 -- 43
	40 -- 44
	42 -- 46
	42 -- 48
	42 -- 51
	43 -- 45
	43 -- 47
}
