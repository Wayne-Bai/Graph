// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: ExpressionStatement"]
	2 [label="[2]: CallExpression"]
	3 [label="[3]: CallExpression"]
	4 [label="[4]: VariableDeclaration"]
	5 [label="[5]: ExpressionStatement"]
	6 [label="[6]: CallExpression"]
	7 [label="[7]: CallExpression"]
	8 [label="[8]: BinaryExpression"]
	9 [label="[9]: VariableDeclarator"]
	10 [label="[10]: CallExpression"]
	11 [label="[11]: MemberExpression"]
	12 [label="[12]: LiteralString"]
	13 [label="[13]: MemberExpression"]
	14 [label="[14]: Identifier"]
	15 [label="[15]: CallExpression"]
	16 [label="[16]: MemberExpression"]
	17 [label="[17]: MemberExpression"]
	18 [label="[18]: Identifier"]
	19 [label="[19]: Property"]
	20 [label="[20]: Identifier"]
	21 [label="[21]: Property"]
	22 [label="[22]: Identifier"]
	23 [label="[23]: LiteralString"]
	24 [label="[24]: CallExpression"]
	25 [label="[25]: Property"]
	26 [label="[26]: Identifier"]
	27 [label="[27]: Property"]
	28 [label="[28]: MemberExpression"]
	29 [label="[29]: LiteralString"]
	31 [label="[31]: Identifier"]
	32 [label="[32]: Property"]
	33 [label="[33]: CallExpression"]
	34 [label="[34]: CallExpression"]
	35 [label="[35]: ObjectExpression"]
	36 [label="[36]: ObjectExpression"]
	37 [label="[37]: Property"]
	38 [label="[38]: Property"]
	39 [label="[39]: CallExpression"]
	40 [label="[40]: Property"]
	41 [label="[41]: CallExpression"]
	42 [label="[42]: Property"]
	43 [label="[43]: Property"]
	44 [label="[44]: LiteralBoolean"]
	45 [label="[45]: LiteralString"]
	46 [label="[46]: LiteralString"]
	47 [label="[47]: LiteralBoolean"]
	48 [label="[48]: LiteralString"]
	51 [label="[51]: ConditionalExpression"]
	52 [label="[52]: ConditionalExpression"]
	53 [label="[53]: LogicalExpression"]
	54 [label="[54]: LogicalExpression"]
	0 -- 1
	0 -- 4
	0 -- 5
	1 -- 2
	1 -- 3
	1 -- 6
	1 -- 7
	3 -- 8
	4 -- 9
	5 -- 10
	6 -- 11
	6 -- 12
	7 -- 13
	7 -- 14
	8 -- 15
	9 -- 16
	9 -- 17
	10 -- 18
	11 -- 19
	13 -- 20
	13 -- 21
	15 -- 22
	15 -- 23
	16 -- 24
	16 -- 25
	17 -- 26
	17 -- 27
	19 -- 28
	24 -- 29
	25 -- 31
	28 -- 32
	34 -- 36
	35 -- 37
	36 -- 38
	36 -- 40
	36 -- 42
	36 -- 43
	37 -- 39
	37 -- 41
	38 -- 44
	38 -- 45
	41 -- 46
	41 -- 47
	42 -- 48
	43 -- 51
}
