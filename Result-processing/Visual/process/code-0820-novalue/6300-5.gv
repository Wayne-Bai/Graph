// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: FunctionDeclaration"]
	2 [label="[2]: ExpressionStatement"]
	3 [label="[3]: Identifier"]
	4 [label="[4]: BlockStatement"]
	5 [label="[5]: CallExpression"]
	6 [label="[6]: ExpressionStatement"]
	7 [label="[7]: VariableDeclaration"]
	8 [label="[8]: VariableDeclaration"]
	9 [label="[9]: ForInStatement"]
	10 [label="[10]: UnaryExpression"]
	11 [label="[11]: Identifier"]
	12 [label="[12]: Identifier"]
	13 [label="[13]: LiteralString"]
	14 [label="[14]: VariableDeclarator"]
	15 [label="[15]: VariableDeclarator"]
	16 [label="[16]: VariableDeclaration"]
	17 [label="[17]: Identifier"]
	18 [label="[18]: VariableDeclarator"]
	19 [label="[19]: LogicalExpression"]
	20 [label="[20]: CallExpression"]
	21 [label="[21]: LiteralBoolean"]
	22 [label="[22]: VariableDeclarator"]
	23 [label="[23]: SequenceExpression"]
	24 [label="[24]: UnaryExpression"]
	25 [label="[25]: CallExpression"]
	26 [label="[26]: FunctionExpression"]
	27 [label="[27]: LogicalExpression"]
	28 [label="[28]: SequenceExpression"]
	29 [label="[29]: Identifier"]
	30 [label="[30]: MemberExpression"]
	31 [label="[31]: LiteralString"]
	32 [label="[32]: BlockStatement"]
	33 [label="[33]: CallExpression"]
	34 [label="[34]: BinaryExpression"]
	35 [label="[35]: LogicalExpression"]
	36 [label="[36]: Identifier"]
	37 [label="[37]: Property"]
	38 [label="[38]: ReturnStatement"]
	39 [label="[39]: MemberExpression"]
	40 [label="[40]: Identifier"]
	41 [label="[41]: Identifier"]
	42 [label="[42]: LiteralString"]
	43 [label="[43]: AssignmentExpression"]
	44 [label="[44]: Identifier"]
	45 [label="[45]: Identifier"]
	46 [label="[46]: Property"]
	47 [label="[47]: Identifier"]
	48 [label="[48]: LiteralBoolean"]
	0 -- 1
	0 -- 2
	1 -- 3
	1 -- 4
	2 -- 5
	2 -- 10
	4 -- 6
	4 -- 7
	4 -- 8
	4 -- 9
	5 -- 12
	5 -- 13
	6 -- 11
	7 -- 14
	8 -- 15
	8 -- 18
	9 -- 16
	9 -- 17
	10 -- 19
	15 -- 21
	16 -- 22
	18 -- 23
	19 -- 24
	19 -- 25
	20 -- 26
	23 -- 27
	23 -- 28
	24 -- 29
	24 -- 30
	25 -- 31
	26 -- 32
	27 -- 33
	27 -- 34
	28 -- 35
	30 -- 36
	30 -- 37
	32 -- 38
	33 -- 39
	33 -- 40
	34 -- 41
	34 -- 42
	35 -- 43
	38 -- 44
	39 -- 45
	39 -- 46
	43 -- 48
}
