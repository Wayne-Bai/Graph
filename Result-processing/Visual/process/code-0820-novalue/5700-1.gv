// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: ExpressionStatement"]
	2 [label="[2]: AssignmentExpression"]
	3 [label="[3]: FunctionExpression"]
	4 [label="[4]: MemberExpression"]
	5 [label="[5]: Identifier"]
	6 [label="[6]: BlockStatement"]
	7 [label="[7]: Property"]
	8 [label="[8]: Identifier"]
	9 [label="[9]: CallExpression"]
	10 [label="[10]: ReturnStatement"]
	11 [label="[11]: MemberExpression"]
	12 [label="[12]: ObjectExpression"]
	13 [label="[13]: Identifier"]
	14 [label="[14]: Property"]
	15 [label="[15]: Property"]
	16 [label="[16]: Property"]
	17 [label="[17]: Property"]
	18 [label="[18]: Property"]
	19 [label="[19]: Property"]
	20 [label="[20]: Property"]
	21 [label="[21]: Property"]
	22 [label="[22]: Property"]
	23 [label="[23]: Property"]
	24 [label="[24]: Property"]
	25 [label="[25]: Property"]
	26 [label="[26]: Property"]
	27 [label="[27]: Property"]
	28 [label="[28]: Property"]
	29 [label="[29]: ArrayExpression"]
	30 [label="[30]: ArrayExpression"]
	31 [label="[31]: ArrayExpression"]
	32 [label="[32]: ObjectExpression"]
	33 [label="[33]: ArrayExpression"]
	34 [label="[34]: LiteralNumber"]
	35 [label="[35]: LiteralBoolean"]
	36 [label="[36]: MemberExpression"]
	37 [label="[37]: LiteralBoolean"]
	38 [label="[38]: ArrayExpression"]
	39 [label="[39]: LiteralNumber"]
	40 [label="[40]: LiteralBoolean"]
	41 [label="[41]: LiteralString"]
	42 [label="[42]: Property"]
	43 [label="[43]: LiteralString"]
	44 [label="[44]: LiteralString"]
	50 [label="[50]: Property"]
	51 [label="[51]: LiteralString"]
	0 -- 1
	1 -- 2
	2 -- 3
	2 -- 4
	2 -- 5
	2 -- 8
	3 -- 6
	4 -- 7
	4 -- 9
	6 -- 10
	10 -- 11
	10 -- 12
	11 -- 13
	11 -- 14
	12 -- 15
	12 -- 16
	12 -- 17
	12 -- 18
	12 -- 19
	12 -- 20
	12 -- 21
	12 -- 22
	12 -- 23
	12 -- 24
	12 -- 25
	12 -- 26
	12 -- 27
	12 -- 28
	16 -- 29
	20 -- 30
	22 -- 33
	22 -- 35
	24 -- 36
	24 -- 37
	26 -- 38
	28 -- 39
	28 -- 40
	30 -- 41
	30 -- 43
	30 -- 44
	32 -- 42
	36 -- 50
}
