// Result
graph {
	0 [label="[0]: Program"]
	1 [label="[1]: IfStatement"]
	2 [label="[2]: IfStatement"]
	3 [label="[3]: ReturnStatement"]
	4 [label="[4]: BlockStatement"]
	5 [label="[5]: BinaryExpression"]
	6 [label="[6]: BlockStatement"]
	7 [label="[7]: LogicalExpression"]
	8 [label="[8]: LogicalExpression"]
	9 [label="[9]: CallExpression"]
	10 [label="[10]: LiteralString"]
	11 [label="[11]: ExpressionStatement"]
	12 [label="[12]: CallExpression"]
	13 [label="[13]: CallExpression"]
	14 [label="[14]: CallExpression"]
	15 [label="[15]: Identifier"]
	16 [label="[16]: CallExpression"]
	17 [label="[17]: CallExpression"]
	18 [label="[18]: Identifier"]
	19 [label="[19]: CallExpression"]
	20 [label="[20]: Identifier"]
	21 [label="[21]: CallExpression"]
	22 [label="[22]: Identifier"]
	23 [label="[23]: BinaryExpression"]
	24 [label="[24]: Identifier"]
	25 [label="[25]: NewExpression"]
	26 [label="[26]: Identifier"]
	27 [label="[27]: BinaryExpression"]
	28 [label="[28]: Identifier"]
	29 [label="[29]: NewExpression"]
	30 [label="[30]: Identifier"]
	31 [label="[31]: LiteralString"]
	32 [label="[32]: LiteralString"]
	33 [label="[33]: CallExpression"]
	34 [label="[34]: Identifier"]
	35 [label="[35]: LiteralBoolean"]
	36 [label="[36]: LiteralString"]
	38 [label="[38]: Identifier"]
	39 [label="[39]: LiteralBoolean"]
	40 [label="[40]: Identifier"]
	41 [label="[41]: LiteralString"]
	42 [label="[42]: Identifier"]
	0 -- 1
	0 -- 2
	0 -- 3
	1 -- 4
	2 -- 5
	2 -- 6
	3 -- 7
	3 -- 8
	5 -- 9
	5 -- 10
	6 -- 11
	7 -- 12
	7 -- 13
	8 -- 14
	9 -- 15
	9 -- 16
	11 -- 17
	12 -- 18
	12 -- 19
	13 -- 20
	13 -- 21
	13 -- 22
	14 -- 23
	14 -- 26
	16 -- 25
	17 -- 24
	17 -- 27
	19 -- 28
	19 -- 29
	19 -- 30
	21 -- 31
	21 -- 32
	23 -- 33
	23 -- 34
	25 -- 35
	25 -- 36
	27 -- 38
	29 -- 39
	29 -- 40
	33 -- 41
	33 -- 42
}
